version: '3.9'

services:

    # Valkey для очередей и кеша
    valkey:
        image: valkey/valkey:latest
        container_name: taskmate_valkey
        restart: on-failure:3
        ports:
            - "6379:6379"
        volumes:
            - valkey_data:/data
            - ./valkey.conf:/etc/valkey/valkey.conf:ro
        command: ["valkey-server", "/etc/valkey/valkey.conf"]

    # PostgreSQL для основного хранения данных
    postgres:
        image: postgres:latest
        container_name: taskmate_postgres
        restart: on-failure:3
        env_file:
            - ./.env
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh:ro
        ports:
            - "5432:5432"

    # pgAdmin 4 для управления PostgreSQL
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: taskmate_pgadmin
        restart: on-failure:3
        env_file:
            - ./.env
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        ports:
            - "8081:80"
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        depends_on:
            - postgres

    # PHP-FPM для обработки PHP Laravel API
    src_laravel_api:
        build:
            context: ./TaskMateBackend/
            dockerfile: Dockerfile
        container_name: taskmate_src_laravel_api
        restart: on-failure:3
        env_file:
            - ./.env
        environment:
            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE_LARAVEL}
            DB_USER: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./TaskMateBackend/:/var/www/src_laravel_api
            - ./TaskMateBackend/.env:/var/www/src_laravel_api/.env
            - ./wait-for-it.sh:/wait-for-it.sh:ro
        depends_on:
            - postgres
            - valkey

    # PHP-FPM для обработки PHP Telegram Bot API
    src_telegram_bot_api:
        build:
            context: ./TaskMateTelegramBot/
            dockerfile: Dockerfile
        container_name: taskmate_src_telegram_bot_api
        restart: on-failure:3
        env_file:
            - ./.env
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE_TASK_MATE_TELEGRAM_BOT}
            DB_USER: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            TELEGRAM_TOKEN: ${TASK_MATE_TELEGRAM_BOT_TOKEN}
            VCRM_API_URL: ${VCRM_API_URL}
            VCRM_API_TOKEN: ${VCRM_API_TOKEN}
        volumes:
            - ./TaskMateTelegramBot/:/var/www/src_telegram_bot_api
            - ./TaskMateTelegramBot/.env:/var/www/src_telegram_bot_api/.env
            - ./wait-for-it.sh:/wait-for-it.sh:ro
        depends_on:
            - src_laravel_api
            - postgres
            - valkey

    # PHP-FPM для обработки PHP Telegram Bot API
    src_vanilla_flow_telegram_bot_api:
        build:
            context: ./VanillaFlowTelegramBot/
            dockerfile: Dockerfile
        container_name: taskmate_src_vanilla_flow_telegram_bot_api
        restart: on-failure:3
        env_file:
            - ./.env
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            DB_CONNECTION: ${DB_CONNECTION}
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            DB_DATABASE: ${DB_DATABASE_VANILLA_FLOW_TELEGRAM_BOT}
            DB_USER: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            TELEGRAM_TOKEN: ${VANILLA_FLOW_TELEGRAM_BOT_TOKEN}
            VCRM_API_URL: ${VCRM_API_URL}
            VCRM_API_TOKEN: ${VCRM_API_TOKEN}
        volumes:
            - ./VanillaFlowTelegramBot/:/var/www/src_vanilla_flow_telegram_bot_api
            - ./VanillaFlowTelegramBot/.env:/var/www/src_vanilla_flow_telegram_bot_api/.env
            - ./wait-for-it.sh:/wait-for-it.sh:ro
        depends_on:
            - postgres
            - valkey

    # Nginx как реверс-прокси для src_laravel_api, src_telegram_bot_api и src_vanilla_flow_telegram_bot_api
    nginx:
        image: nginx:latest
        container_name: taskmate_nginx
        restart: on-failure:3
        ports:
            - "8000:80"   # Laravel API
            - "8001:81"   # Task Mate Telegram Bot API
            - "8003:83"   # Vanilla Flow Telegram Bot API
        volumes:
            - ./TaskMateBackend/:/var/www/src_laravel_api:ro
            - ./TaskMateTelegramBot/:/var/www/src_telegram_bot_api:ro
            - ./VanillaFlowTelegramBot/:/var/www/src_vanilla_flow_telegram_bot_api:ro
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - src_laravel_api
            - src_telegram_bot_api
            - src_vanilla_flow_telegram_bot_api

volumes:
    valkey_data:
    postgres_data:
    pgadmin_data:
